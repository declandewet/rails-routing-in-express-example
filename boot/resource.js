// Generated by CoffeeScript 1.6.2
/*
  ./boot/resource.coffee - provides default CRUD operation mapping for controller routes
*/

var map_route, mappings, _;

_ = require('underscore');

mappings = [
  {
    action: 'index',
    verb: 'get'
  }, {
    action: 'new',
    verb: 'get'
  }, {
    action: 'create',
    verb: 'post'
  }, {
    action: 'show',
    verb: 'get'
  }, {
    action: 'edit',
    verb: 'get'
  }, {
    action: 'update',
    verb: 'put'
  }, {
    action: 'destroy',
    verb: 'delete'
  }
];

map_route = function(app, name, controller) {
  var fn, mapping, route, _i, _len, _results;

  _results = [];
  for (_i = 0, _len = mappings.length; _i < _len; _i++) {
    mapping = mappings[_i];
    if (controller[mapping.action] !== void 0) {
      switch (mapping.action) {
        case 'index' || 'create':
          route = "/" + name;
          break;
        case 'show' || 'update' || 'destroy':
          route = "/" + name + "/:id";
          break;
        case 'edit':
          route = "/" + name + "/:id/edit";
          break;
        default:
          route = "/" + name + "/" + mapping.action;
      }
      if (_.isFunction(controller[mapping.action])) {
        app[mapping.verb](route, controller[mapping.action]);
      }
      if (_.isArray(controller[mapping.action])) {
        _results.push(app[mapping.verb](route, (function() {
          var _j, _len1, _ref, _results1;

          _ref = controller[mapping.action];
          _results1 = [];
          for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
            fn = _ref[_j];
            _results1.push(fn);
          }
          return _results1;
        })()));
      } else {
        _results.push(void 0);
      }
    } else {
      _results.push(void 0);
    }
  }
  return _results;
};

exports.map = function(app, controller_name) {
  var controller;

  controller = require("../app/controllers/" + controller_name);
  map_route(app, controller_name, controller);
  return controller;
};
